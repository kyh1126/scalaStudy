// src/main/scala/progscala2/basicoop/ValueClassDollar.sc

// 타입 클래스 구현: 래퍼 타입을 추가하는 것이 일반적이지만, 값 타입을 감싸면 값 타입을 참조 타입으로 바꾸는 효과가 있다.

// 범용 트레이트: 스칼라 2.10 부터 값 클래스라고 부르는 위에 대한 해법과 병행 기능으로 도입되었다. 어떤 것을 정의할 수 있는지에 제약을 가하는 반면,
//             래퍼 객체를 힙에 할당하지 않아도 된다.

// 올바른 값 클래스가 되기 위한 규칙
// 1. 값 클래스에는 공개된 val 인자가 오직 하나만 있어야 한다.(스칼라 2.11부터는 인자가 공개되지 않아도 된다)
// 2. 인자의 타입이 값 클래스 자체가 될 수 없다.
// 3. 값 클래스가 매개변수화된 경우라면 @specialized 애노테이션을 사용할 수 없다.
// 4. 값 클래스에는 주 생성자 외의 다른 생성자가 있으면 안 된다.
// 5. 값 클래스 안에는 메서드만 들어있어야 한다. 다른 val 이나 var 필드가 있으면 안 된다.
// 6. 하지만 값 클래스는 equals 나 hashCode 를 오버라이딩할 수 없다.
// 7. 값 클래스 안에는 내포된 트레이트, 클래스, 객체를 만들 수 없다.
// 8. 값 클래스를 상속해서 서브클래스를 만들 수 없다.
// 9. 값 클래스는 오직 범용 트레이트만 상속할 수 있다.
// 10. 값 클래스는 최상위 타입이거나, 참조 가능한 객체의 멤버여야 한다.

class Dollar(val value: Float) extends AnyVal {
  override def toString = "$%.2f".format(value)
}

// 컴파일 시점에는 바깥 타입(Dollar) 취급, 실행 시점에는 내부 타입(Float) 취급한다.
val benjamin = new Dollar(100)
// Result: benjamin: Dollar = $100.00