# 프로그래밍 스칼라 2판(Programming Scala, 2nd Edition)#

## 코드 예제를 위한 README #

*딘 왐플러(Dean Wampler)* / 오현석 역 / 한글 README는 오현석 정리 번역<br/>
*August 11, 2014* / *2016년 5월*

여기 정리한 코드는 프로그래밍 스칼라 2판의 예제 코드입니다. 일부 책에는 들어있지 않은 예제도 여기 들어 있습니다. 

예제는 스칼라 2.11에서 실행될 수 있습니다.

책의 각 예제 앞 머리에 보면 다음과 같이 파일 위치가 들어있습니다. 

```
// src/main/scala/progscala2/chapter/../filename
```

또한, 자바 파일도 일부 들어있으며, 테스트 파일은 일반적인 관례에 따라 `src/test/...`에 들어있습니다. *스칼라테스트*나 *스칼라체크*에서 사용할 수 있는 테스트 프로그램도 들어있으니(책에 따로 설명하지는 않음), 참조하십시오.

## 명명 규약

이 책의 예제에는 일반적인 스칼라 소스코드(`scalac`로 컴파일), `scala` 명령으로 실행해야 하는 '스크립트' 예제(SBT에서는 `console`로 실행), 또 일부러 오류를 넣은 파일이 있습니다. 저자들은 이에 대해 다음과 같이 이름을 정했습니다.

- `build.sbt` - SBT 빌드 스크립트
- `*.scala` - `scalac`로 컴파일할 소스 코드
- `*.sc` - `scala foo-script.sc` 처럼 직접 실행 가능한 스크립트 파일. 확장자를 `sc`로 정했기 때문에 SBT에서는 컴파일시 이 파일을 무시합니다. 하지만 스칼라 커뮤니티에서 일반적으로 사용하는 명명 규칙은 스크립트나 일반 소스코드 모두 `scala`를 확장자로 쓰는 것입니다.
- `*.javaX`, `*.scalaX`, `*.scX` - 오류가 발생하는 소스코드나 스크립트

## 필요한 도구

[SBT](http://www.scala-sbt.org/release/docs/Getting-Started/Setup.html)를 설치해면 모든 소스코트를 빌드할 수 있습니다.   `build.sbt` 빌드 설정 파일에는 빌드에 필요한 모든 정보가 들어있습니다.

[설치 방법](http://www.scala-sbt.org/release/docs/Getting-Started/Setup.html)을 읽어보고 따라하면 됩니다(영문).

스칼라를 별도로 설치하고, *스칼라독*도 설치 가능하지만, 꼭 그래야 할 필요는 없습니다. [scala-lang.org](http://scala-lang.org)에서 그에 대한 정보를 얻을 수 있습니다.

## 코드 예제 빌드하기

SBT를 설치하고, 명령행 창(터미널/커맨드 창)에서 `sbt test`를 실행하십시오. 모든 의존관계를 설치하고, 모든 코드를 컴파일하기 때문에 상당히 *긴* 출력을 볼 수 있습니다. 

다른 인자를 지정하지 않고 `sbt`만 실행하면 대화식으로 `sbt`에 명령을 내릴 수 있습니다. 거기서 나오려면 `ctrl-D`를 누르십시오. `>`라는 SBT 프럼프트 안에서는 다음과 같은 명령을 실행할 수 있습니다. `#`는 주석을 시작하는 부분이므로, `#`부터 그 이후의 내용은 입력할 필요가 없습니다.

	help       # 도움말
	clean      # 빌드관련 출력 모두 삭제
	compile    # 소스 컴파일
	test       # 소스를 컴파일한 후, 테스트 실행
	+test      # 지원하는 모든 스칼라 버전에 대해 컴파일 후 테스트 실행
	~test      # 저장된 소스 파일이 변경될 때마다 다시 컴파일 후 필요한 테스트 실행
	tasks      # 가장 일반적인 명령을 보여줌
	tasks -V   # 모든 명령을 보여줌

SBT 밖에서는 다음과 같이 `scala`를 사용해 스크립트를 실행할 수 있습니다.

    scala src/main/scala/.../foo.sc

하지만, 이런 스크립트 중 상당수가 다른 컴파일된 프로젝트나 서드파티 라이브러리를 요구합니다. 그런 경우, 다음과 같이 클래스패스에 필요한 의존관계를 추가할 수 있습니다.

    scala -classpath target/scala-2.11/classes src/main/scala/.../foo.sc

하지만 가장 좋은 방법은 SBT 안에서 `console`을 실행해서 REPL을 실행하는 것입니다. REPL 안에서 `:load src/main/scala/.../foo.sc` 라고 하면 스크립트를 실행할 수 있습니다.

## Feedback ##

피드백은 역자(enshahar@gmail.com)나 한빛 미디어(www.hanbit.co.kr)로 보내주기 바랍니다.
